name: "deepid"
layer {
	name: "pair_data1"
	type: "Data"
	top: "pair_data1"
	top: "label1"
	data_param {
		source: "./siamese/webface_pair1_train"
		batch_size: 50
		backend: LMDB
	}
	transform_param {
		mean_file: "./siamese/mean.proto"
		scale: 0.0078125
		mirror: true
	}
	include: { phase: TRAIN }
}
layer {
	name: "pair_data2"
	type: "Data"
	top: "pair_data2"
	top: "label2"
	data_param {
		source: "./siamese/webface_pair2_train"
		batch_size: 50
		backend: LMDB
	}
	transform_param {
		mean_file: "./siamese/mean.proto"
		scale: 0.0078125
		mirror: true
	}
	include: { phase: TRAIN }
}

layer {
	name: "pair_data1"
	type: "Data"
	top: "pair_data1"
	top: "label1"
	data_param {
		source: "./siamese/webface_pair1_test"
		batch_size: 50
		backend: LMDB
	}
	transform_param {
		mean_file: "./siamese/mean.proto"
		scale: 0.0078125
		mirror: true
	}
	include: { phase: TEST }
}
layer {
	name: "pair_data2"
	type: "Data"
	top: "pair_data2"
	top: "label2"
	data_param {
		source: "./siamese/webface_pair2_test"
		batch_size: 50
		backend: LMDB
	}
	transform_param {
		mean_file: "./siamese/mean.proto"
		scale: 0.0078125
		mirror: true
	}
	include: { phase: TEST }
}
layer {
	name: "concat_data"
	type: "Concat"
	bottom: "pair_data1"
	bottom: "pair_data2"
	top: "concat_data"
	concat_param {
		concat_dim: 0
	}
}
layer {
	name: "concat_label"
	type: "Concat"
	bottom: "label1"
	bottom: "label2"
	top: "concat_label"
	concat_param {
		concat_dim: 0
	}
}

layer {
	name: "conv11"
	type: "Convolution"
	bottom: "concat_data"
	top: "conv11"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv11_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv11_b"
	}
	convolution_param {
		num_output: 32
		kernel_size: 3
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu11"
	type: "ReLU"
	bottom: "conv11"
	top: "conv11"
}
layer {
	name: "conv12"
	type: "Convolution"
	bottom: "conv11"
	top: "conv12"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv12_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv12_b"
	}
	convolution_param {
		num_output: 64
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu12"
	type: "ReLU"
	bottom: "conv12"
	top: "conv12"
}
layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv12"
	top: "pool1"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	name: "conv21"
	type: "Convolution"
	bottom: "pool1"
	top: "conv21"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv21_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv21_b"
	}
	convolution_param {
		num_output: 64
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu21"
	type: "ReLU"
	bottom: "conv21"
	top: "conv21"
}
layer {
	name: "conv22"
	type: "Convolution"
	bottom: "conv21"
	top: "conv22"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv22_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv22_b"
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu22"
	type: "ReLU"
	bottom: "conv22"
	top: "conv22"
}
layer {
	name: "pool2"
	type: "Pooling"
	bottom: "conv22"
	top: "pool2"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	name: "conv31"
	type: "Convolution"
	bottom: "pool2"
	top: "conv31"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv31_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv31_b"
	}
	convolution_param {
		num_output: 96
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu31"
	type: "ReLU"
	bottom: "conv31"
	top: "conv31"
}
layer {
	name: "conv32"
	type: "Convolution"
	bottom: "conv31"
	top: "conv32"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv32_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv32_b"
	}
	convolution_param {
		num_output: 192
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu32"
	type: "ReLU"
	bottom: "conv32"
	top: "conv32"
}
layer {
	name: "pool3"
	type: "Pooling"
	bottom: "conv32"
	top: "pool3"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	name: "conv41"
	type: "Convolution"
	bottom: "pool3"
	top: "conv41"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv41_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv41_b"
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.005
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu41"
	type: "ReLU"
	bottom: "conv41"
	top: "conv41"
}
layer {
	name: "conv42"
	type: "Convolution"
	bottom: "conv41"
	top: "conv42"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv42_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv42_b"
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.005
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu42"
	type: "ReLU"
	bottom: "conv42"
	top: "conv42"
}
layer {
	name: "pool4"
	type: "Pooling"
	bottom: "conv42"
	top: "pool4"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 2
	}
}
layer {
	name: "conv51"
	type: "Convolution"
	bottom: "pool4"
	top: "conv51"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv51_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv51_b"
	}
	convolution_param {
		num_output: 160
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
			std: 0.005
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu51"
	type: "ReLU"
	bottom: "conv51"
	top: "conv51"
}
layer {
	name: "conv52"
	type: "Convolution"
	bottom: "conv51"
	top: "conv52"
	param {
		lr_mult: 1
		decay_mult: 0
		name: "conv52_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "conv52_b"
	}
	convolution_param {
		num_output: 320
		kernel_size: 3
		stride: 1
		pad: 1
		weight_filler {
			type: "gaussian"
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "relu52"
	type: "ReLU"
	bottom: "conv52"
	top: "conv52"
}
layer {
	name: "drop5"
	type: "Dropout"
	bottom: "conv52"
	top: "drop5"
	dropout_param {
		dropout_ratio: 0.5
	}
}

layer {
	name: "ip1"
	type: "InnerProduct"
	bottom: "drop5"
	top: "ip1"
	param {
		lr_mult: 1
		decay_mult: 1e-5
		name: "ip1_w"
	}
	param {
		lr_mult: 2
		decay_mult: 0
		name: "ip1_b"
	}
	inner_product_param {
		num_output: 1000
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}
layer {
	name: "softmax_loss1"
	type: "SoftmaxWithLoss"
	loss_weight: 1
	bottom: "ip1"
	bottom: "concat_label"
	top: "softmax_loss1"
}

layer {
	name: "slice_pool5"
	type: "Slice"
	bottom: "conv52"
	slice_param {
		slice_point: 50
		axis: 0
	}
	top: "pool5_l"
	top: "pool5_r"
}

layer {
	name: "feat"
	type: "InnerProduct"
	bottom: "pool5_l"
	top: "feat"
	param {
		name: "feat_w"
		lr_mult: 1
	}
	param {
		name: "feat_b"
		lr_mult: 2
	}
	inner_product_param {
		num_output: 2
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "feat_p"
	type: "InnerProduct"
	bottom: "pool5_r"
	top: "feat_p"
	param {
		name: "feat_w"
		lr_mult: 1
	}
	param {
		name: "feat_b"
		lr_mult: 2
	}
	inner_product_param {
		num_output: 2
		weight_filler {
            type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "accuracy"
	type: "Accuracy"
	bottom: "ip1"
	bottom: "concat_label"
	top: "accuracy"
	accuracy_param {
		top_k: 1
	}
	include {
		phase: TEST
	}
}

layer {
	name: "split"
	type: "Python"
	bottom: "label1"
	bottom: "label2"
	top: "sim"
	python_param {
		module: "layer.split_layer"
		layer: "SplitLayer"
	}
	include: { phase: TRAIN }
}

layer {
	name: "simloss"
	type: "ContrastiveLoss"
	loss_weight: 0.01
	contrastive_loss_param {
		margin: 1
	}
	bottom: "feat"
	bottom: "feat_p"
	bottom: "sim"
	top: "simloss"
	include: { phase: TRAIN }
}